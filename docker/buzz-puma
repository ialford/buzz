#!/bin/bash
#
# puma Script to start/stop puma server
#
# Author:       Mike A. Harris <mharris@redhat.com>
#
# chkconfig: - 92 08
# description:  Starts and stops puma
# short-description:  Starts and stops puma

### BEGIN INIT INFO
# Required-Start:
# Required-Stop:
# Provides: psacct
# Default-Start:
# Default-Stop: 0 1 2 3 4 5 6
# Description: Starts and stops process accounting
# Short-Description: Starts and stops process accounting
### END INIT INFO

# Source function library.
#. /etc/init.d/functions

NAME=buzz-puma
BUZZ_DIR=/home/app/buzz
PIDFILE=$BUZZ_DIR/shared/pids/puma.pid
DAEMON="/usr/local/bundle/bin/bundle exec puma"
DAEMONOPTS="-e $RAILS_ENV -C $BUZZ_DIR/config/puma.rb $BUZZ_DIR/config.ru"


case "$1" in
start)
    printf "%-50s" "Starting $NAME..."
    cd $BUZZ_DIR
    PID=`$DAEMON $DAEMONOPTS > /dev/null 2>&1 & echo $!`
    #echo "Saving PID" $PID " to " $PIDFILE
        if [ -z $PID ]; then
            printf "%s\n" "Fail"
        else
            echo $PID > $PIDFILE
            printf "%s\n" "Ok"
        fi
;;
#
#  start) 
#     echo "Start puma server for buzz"  
#     cd $BUZZ_DIR 
#     /usr/local/bundle/bin/bundle exec puma -e $RAILS_ENV -C $BUZZ_DIR/config/puma.rb $BUZZ_DIR/config.ru
#     echo
#     ;;
  stop) 
     PID=`cat $PIDFILE`
     echo "Stop Puma"  
     kill -HUP $PID
     echo
     ;;
  status)
    printf "%-50s" "Checking $NAME..."
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
            printf "%s\n" "Process dead but pidfile exists"
        else
            echo "Running"
        fi
    else
        printf "%s\n" "Service not running"
    fi
  ;;
  restart|reload|force-reload)
	stop
	start
	;;
  *)
	# do not advertise unreasonable commands that there is no reason
	# to use with this device
	echo $"Usage: $0 {start|stop|status|restart}"
	exit 2
esac

exit 0

